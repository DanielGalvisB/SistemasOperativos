#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>

#define FIFO_FILE "/tmp/fifo_twoway"

void reverse_string(char *str);

int main() {
    int fd;
    char readbuf[80];
    char end[10];
    int to_end;
    int read_bytes;

    // Crear la FIFO si no existe
    mkfifo(FIFO_FILE, 0640);

    strcpy(end, "end");

    // Abrir la FIFO para lectura y escritura
    fd = open(FIFO_FILE, O_RDWR);
    if (fd == -1) {
        perror("Error opening FIFO");
        exit(EXIT_FAILURE);
    }

    while (1) {
        // Leer el mensaje del cliente
        read_bytes = read(fd, readbuf, sizeof(readbuf));
        if (read_bytes == -1) {
            perror("Error reading from FIFO");
            close(fd);
            exit(EXIT_FAILURE);
        }

        readbuf[read_bytes] = '\0';  // Asegurar que la cadena leída está terminada en NULL

        printf("FIFOSERVER: Received string: \"%s\" and length is %d\n", readbuf, (int)strlen(readbuf));

        to_end = strcmp(readbuf, end);
        if (to_end == 0) {
            // Si el mensaje es "end", terminar el proceso
            close(fd);
            break;
        }

        // Invertir la cadena antes de enviarla de vuelta
        reverse_string(readbuf);
        printf("FIFOSERVER: Sending Reversed String: \"%s\" and length is %d\n", readbuf, (int)strlen(readbuf));

        // Enviar la cadena invertida de vuelta al cliente
        write(fd, readbuf, strlen(readbuf));

        // Hacer una pausa para permitir que el cliente lea la respuesta
        sleep(2);
    }

    return 0;
}

void reverse_string(char *str) {
    int last = strlen(str) - 1;
    int limit = last / 2;
    int first = 0;
    char temp;

    // Invertir la cadena
    while (first < last) {
        temp = str[first];
        str[first] = str[last];
        str[last] = temp;
        first++;
        last--;
    }
}
